<?xml version="1.0" encoding="UTF-8"?>
<web-app
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        version="3.0"
        metadata-complete="false">
    <error-page>
       <error-code>404</error-code>
       <location>/static/404.html</location>
    </error-page>
    <error-page>
       <error-code>500</error-code>                             
       <location>/static/500.html</location>
    </error-page>

    <!-- Spring配置文件开始  -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:applicationContext.xml         
        </param-value>
    </context-param>
    <listener>
    	<description>spring监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
     <!-- 防止spring内存溢出监听器 -->
    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    
     <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
      <!-- Spring配置文件结束 -->

    <!-- shiro 安全过滤器 -->
    <!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!-- Make sure any request you want accessible to Shiro is filtered. /* catches all -->
    <!-- requests.  Usually this filter mapping is defined first (before all others) to -->
    <!-- ensure that Shiro works in subsequent filters in the filter chain:             -->
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
     <filter>
        <description>字符集过滤器</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <description>字符集编码</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
     <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
  	  
    <filter> 
    	<description>使session在一个http请求中保持打开状态过滤器</description>
   		<filter-name>SpringOpenEntityManagerInViewFilter</filter-name> 
   		<filter-class>
			org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter
  		</filter-class>                                        
	</filter> 
	<filter-mapping> 
   		<filter-name>SpringOpenEntityManagerInViewFilter</filter-name> 
   		<url-pattern>/*</url-pattern> 
	</filter-mapping>
	
	
	<!-- 下面为Druid默认配置，过滤掉多余的url地址 -->
  <filter>
    <filter-name>DruidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
    </init-param>
    <init-param>
        <param-name>principalSessionName</param-name>
        <param-value>currentUsername</param-value>
    </init-param>
    <init-param>
        <param-name>principalCookieName</param-name>
        <param-value>currentUsername</param-value>
    </init-param>
    <!-- 配置profileEnable能够监控单个url调用的sql列表。 -->
	 <init-param>
	    <param-name>profileEnable</param-name>
	    <param-value>true</param-value>
	</init-param>
  </filter>
  <filter-mapping>
    <filter-name>DruidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
	<servlet>
      	<servlet-name>DruidStatView</servlet-name>
     	 <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
     	 
    <!-- deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
    	 如果allow没有配置或者为空，则允许所有访问 --> 
    	 <!-- <IP>或者<IP>/<SUB_NET_MASK_size> -->  	 
	  <!--   <init-param>
	        <param-name>allow</param-name>
	        <param-value>128.242.127.1/24,128.242.128.1</param-value>   
	    </init-param>
	    <init-param>
	        <param-name>deny</param-name>
	        <param-value>128.242.127.4</param-value>
	    </init-param> -->
 	</servlet>
    <servlet-mapping>
      	<servlet-name>DruidStatView</servlet-name>
      	<url-pattern>/druid/*</url-pattern>
    </servlet-mapping>
</web-app>
